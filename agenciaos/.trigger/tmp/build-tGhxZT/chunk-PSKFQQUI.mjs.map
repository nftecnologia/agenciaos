{
  "version": 3,
  "sources": ["../../../src/trigger/simple-jobs.ts"],
  "sourcesContent": ["import { task } from \"@trigger.dev/sdk/v3\";\n\nexport const simpleAIJob = task({\n  id: \"simple-ai-job\",\n  maxDuration: 60,\n  retry: {\n    maxAttempts: 2,\n  },\n  run: async (payload: { agencyId: string; content: string }) => {\n    console.log(`Processando IA para agência ${payload.agencyId}`);\n    \n    // Simulação simples sem Prisma\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    return {\n      success: true,\n      result: `IA processada para: ${payload.content}`,\n      timestamp: new Date().toISOString(),\n    };\n  },\n});\n\nexport const simpleWebhookJob = task({\n  id: \"simple-webhook-job\",\n  maxDuration: 30,\n  retry: {\n    maxAttempts: 3,\n  },\n  run: async (payload: { event: string; customerId: string }) => {\n    console.log(`Webhook recebido: ${payload.event} para ${payload.customerId}`);\n    \n    // Simulação simples sem Prisma\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    return {\n      success: true,\n      action: \"processed\",\n      event: payload.event,\n      customerId: payload.customerId,\n      timestamp: new Date().toISOString(),\n    };\n  },\n});\n\nexport const simpleReportJob = task({\n  id: \"simple-report-job\",\n  maxDuration: 120,\n  retry: {\n    maxAttempts: 1,\n  },\n  run: async () => {\n    console.log(\"Gerando relatório simples\");\n    \n    // Simulação simples sem Prisma\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    \n    return {\n      success: true,\n      report: \"Relatório gerado com sucesso\",\n      timestamp: new Date().toISOString(),\n      agencies: 5, // Simulado\n    };\n  },\n});\n"],
  "mappings": ";;;;;;;;AAAA;AAEO,IAAM,cAAc,KAAK;AAAA,EAC9B,IAAI;AAAA,EACJ,aAAa;AAAA,EACb,OAAO;AAAA,IACL,aAAa;AAAA,EACf;AAAA,EACA,KAAK,OAAO,YAAmD;AAC7D,YAAQ,IAAI,+BAA+B,QAAQ,QAAQ,EAAE;AAG7D,UAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,GAAI,CAAC;AAEtD,WAAO;AAAA,MACL,SAAS;AAAA,MACT,QAAQ,uBAAuB,QAAQ,OAAO;AAAA,MAC9C,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC;AAAA,EACF;AACF,CAAC;AAEM,IAAM,mBAAmB,KAAK;AAAA,EACnC,IAAI;AAAA,EACJ,aAAa;AAAA,EACb,OAAO;AAAA,IACL,aAAa;AAAA,EACf;AAAA,EACA,KAAK,OAAO,YAAmD;AAC7D,YAAQ,IAAI,qBAAqB,QAAQ,KAAK,SAAS,QAAQ,UAAU,EAAE;AAG3E,UAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,GAAG,CAAC;AAErD,WAAO;AAAA,MACL,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,OAAO,QAAQ;AAAA,MACf,YAAY,QAAQ;AAAA,MACpB,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC;AAAA,EACF;AACF,CAAC;AAEM,IAAM,kBAAkB,KAAK;AAAA,EAClC,IAAI;AAAA,EACJ,aAAa;AAAA,EACb,OAAO;AAAA,IACL,aAAa;AAAA,EACf;AAAA,EACA,KAAK,YAAY;AACf,YAAQ,IAAI,2BAA2B;AAGvC,UAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,GAAI,CAAC;AAEtD,WAAO;AAAA,MACL,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,UAAU;AAAA;AAAA,IACZ;AAAA,EACF;AACF,CAAC;",
  "names": []
}
