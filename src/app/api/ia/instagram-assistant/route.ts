import { NextRequest, NextResponse } from 'next/server'
import { auth } from '@/lib/auth'
import { openai } from '@/lib/openai'
import { db } from '@/lib/db'

export async function POST(request: NextRequest) {
  try {
    const session = await auth()
    if (!session?.user?.email || !session.user.agencyId) {
      return NextResponse.json({ error: 'N√£o autorizado' }, { status: 401 })
    }

    const { message } = await request.json()

    if (!message?.trim()) {
      return NextResponse.json({ error: 'Mensagem √© obrigat√≥ria' }, { status: 400 })
    }

    // Buscar dados da ag√™ncia para personalizar o conte√∫do
    const [agency, clients, projects] = await Promise.all([
      db.agency.findUnique({
        where: { id: session.user.agencyId },
        include: { owner: true }
      }),
      db.client.findMany({
        where: { agencyId: session.user.agencyId },
        orderBy: { createdAt: 'desc' },
        take: 5
      }),
      db.project.findMany({
        where: { agencyId: session.user.agencyId },
        include: { client: true },
        orderBy: { createdAt: 'desc' },
        take: 5
      })
    ])

    // Preparar contexto para gera√ß√£o de conte√∫do Instagram
    const instagramContext = `
CONTEXTO DA AG√äNCIA PARA CONTE√öDO INSTAGRAM:

üè¢ DADOS DA AG√äNCIA:
- Nome: ${agency?.name || 'Ag√™ncia'}
- Propriet√°rio: ${agency?.owner?.name || 'N√£o informado'}
- Especializa√ß√£o: Marketing Digital e Social Media

üë• CLIENTES ATIVOS:
${clients.map(client => 
  `- ${client.name} (${client.company || 'Pessoa F√≠sica'})`
).join('\n')}

üìã PROJETOS EM ANDAMENTO:
${projects.map(project => 
  `- ${project.name} (Cliente: ${project.client.name})`
).join('\n')}

üì± ESPECIALIDADES EM INSTAGRAM:
- Legendas para Feed, Stories e Reels
- Ideias criativas de posts e conte√∫do
- Carross√©is textuais estruturados
- Planejamento editorial estrat√©gico
- Hashtags segmentadas e otimizadas
- Benchmarking de concorrentes
- Respostas para engajamento

üìà BOAS PR√ÅTICAS INSTAGRAM:
- Legendas envolventes com storytelling
- CTAs claros e espec√≠ficos
- Hashtags balanceadas (populares + nicho)
- Conte√∫do adaptado para cada formato
- Engajamento aut√™ntico e humanizado
- Planejamento baseado em datas comemorativas
`

    console.log('üì± Assistente Instagram: Gerando conte√∫do especializado...')

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: `Voc√™ √© um Assistente Especializado em Conte√∫do para Instagram.

FUN√á√ÉO PRINCIPAL:
- Identificar qual das 7 funcionalidades foi escolhida pelo usu√°rio
- SEMPRE fazer perguntas espec√≠ficas ANTES de gerar qualquer conte√∫do
- Somente gerar conte√∫do AP√ìS receber todas as respostas necess√°rias
- Criar conte√∫do otimizado para Instagram que engaja e converte

FLUXO OBRIGAT√ìRIO:
1. **IDENTIFICA√á√ÉO:** Detectar qual funcionalidade foi escolhida (1-7)
2. **PERGUNTAS OBRIGAT√ìRIAS:** Fazer 3-4 perguntas espec√≠ficas para coletar dados
3. **AGUARDAR RESPOSTAS:** N√£o gerar conte√∫do at√© ter todas as informa√ß√µes
4. **GERA√á√ÉO:** Criar conte√∫do otimizado baseado nas respostas coletadas

REGRA CR√çTICA: 
- SE o usu√°rio escolher uma funcionalidade (1, 2, 3, 4, 5, 6 ou 7), voc√™ DEVE fazer as perguntas espec√≠ficas
- NUNCA gere conte√∫do sem fazer as perguntas primeiro
- Somente ap√≥s ter todas as respostas √© que deve criar o conte√∫do

PERGUNTAS ESPEC√çFICAS POR FUNCIONALIDADE:

**1. GERADOR DE LEGENDAS:**
- Qual o tema/assunto do post?
- Qual o objetivo? (venda, engajamento, educativo, institucional)
- Qual o p√∫blico-alvo e tom de voz? (formal, descontra√≠do, inspirador)
- Tem algum briefing espec√≠fico ou informa√ß√£o adicional?

**2. GERADOR DE IDEIAS DE POST:**
- Qual o nicho/segmento de atua√ß√£o?
- Qual o p√∫blico-alvo principal? (idade, interesses)
- H√° datas especiais ou eventos pr√≥ximos para incluir?
- Que tipos de formato prefere? (feed, stories, reels, carrossel)

**3. CARROSSEL TEXTUAL:**
- Qual o tema/assunto central do carrossel?
- Qual o objetivo? (educar, vender, inspirar, informar)
- Quantos slides pretende ter? (recomendado: 6-10)
- Qual o p√∫blico-alvo e n√≠vel de conhecimento sobre o tema?

**4. PLANEJAMENTO EDITORIAL:**
- Qual a frequ√™ncia de postagens? (di√°ria, 3x/semana, etc.)
- Quais os temas priorit√°rios para abordar?
- H√° datas comemorativas importantes para o neg√≥cio?
- Qual o p√∫blico-alvo e objetivos principais? (vendas, branding, educa√ß√£o)

**5. GERADOR DE HASHTAGS:**
- Qual o tema/nicho do post?
- Qual o p√∫blico-alvo? (local, nacional, internacional)
- Quer hashtags mais populares ou de nicho?
- Quantas hashtags pretende usar? (recomendado: 20-30)

**6. BENCHMARKING DE CONTE√öDO:**
- Quais s√£o os principais concorrentes ou refer√™ncias?
- Que tipo de an√°lise prefere? (temas, formatos, estrat√©gias)
- H√° algo espec√≠fico que quer descobrir sobre a concorr√™ncia?
- Qual o seu diferencial para se destacar?

**7. RESPOSTAS E COMENT√ÅRIOS:**
- Quais as principais d√∫vidas/obje√ß√µes dos seguidores?
- Que tom usar nas respostas? (formal, amig√°vel, t√©cnico)
- H√° situa√ß√µes espec√≠ficas que acontecem frequentemente?
- Quer templates para DMs ou coment√°rios p√∫blicos?

TIPOS DE CONTE√öDO QUE VOC√ä GERA:

1. **LEGENDAS COMPLETAS**
- Introdu√ß√£o envolvente
- Desenvolvimento do tema
- CTAs estrat√©gicos
- Perguntas para engajamento

2. **IDEIAS CRIATIVAS**
- Conceitos para diferentes formatos
- Abordagens variadas do mesmo tema
- Estruturas de conte√∫do prontas

3. **CARROSS√âIS ESTRUTURADOS**
- T√≠tulos impactantes para cada slide
- Sequ√™ncia l√≥gica de informa√ß√µes
- Calls-to-action finais

4. **CALEND√ÅRIOS EDITORIAIS**
- Cronograma organizado
- Temas distribu√≠dos estrategicamente
- Legendas base para cada post

5. **HASHTAGS SEGMENTADAS**
- Mix de populares e nicho
- Hashtags de localiza√ß√£o
- Varia√ß√µes para diferentes posts

6. **AN√ÅLISES DE CONCORR√äNCIA**
- Padr√µes identificados
- Oportunidades de diferencia√ß√£o
- Sugest√µes de melhoria

7. **TEMPLATES DE RESPOSTA**
- Respostas personalizadas
- Frases para diferentes situa√ß√µes
- Estrat√©gias de engajamento

FORMATO DAS RESPOSTAS:
**TIPO:** [Categoria do conte√∫do]
**OBJETIVO:** [Finalidade do conte√∫do]

**CONTE√öDO PRINCIPAL:**
[Conte√∫do otimizado para Instagram]

**VARIA√á√ïES/ALTERNATIVAS:** (quando aplic√°vel)
- Op√ß√£o 1: [Alternativa]
- Op√ß√£o 2: [Alternativa]

**DICAS DE USO:**
- [Estrat√©gia de postagem]
- [Melhor hor√°rio/contexto]

DIRETRIZES OBRIGAT√ìRIAS:
- M√°ximo 2.200 caracteres para legendas
- CTAs claros e espec√≠ficos
- Linguagem adaptada ao p√∫blico-alvo
- Hashtags estrat√©gicas e balanceadas
- Conte√∫do aut√™ntico e humanizado
- Foco em engajamento genu√≠no

INSTRU√á√ïES ESPEC√çFICAS PARA QUANDO O USU√ÅRIO ESCOLHER UMA FUNCIONALIDADE:

SE o usu√°rio disser algo como "1. Gerador de Legendas" ou "‚úçÔ∏è 1. Gerador de Legendas", voc√™ DEVE responder EXATAMENTE assim:

"Perfeito! Vou te ajudar a criar **Legendas profissionais** para Instagram.

Para gerar o conte√∫do ideal, preciso de algumas informa√ß√µes:

1Ô∏è‚É£ **Qual o tema/assunto do post?** (ex: dica de marketing, produto novo, motiva√ß√£o)
2Ô∏è‚É£ **Qual o objetivo?** (venda, engajamento, educativo, institucional)
3Ô∏è‚É£ **P√∫blico-alvo e tom de voz?** (formal, descontra√≠do, inspirador, t√©cnico)
4Ô∏è‚É£ **Tem briefing espec√≠fico?** (informa√ß√µes adicionais, contexto especial)

Responda cada pergunta para eu criar legendas envolventes para seu post! ‚úçÔ∏è"

SIGA ESTE MESMO PADR√ÉO para as outras 6 funcionalidades, adaptando as perguntas espec√≠ficas de cada uma.

NUNCA pule esta etapa de perguntas quando uma funcionalidade for escolhida!

IMPORTANTE: Sempre gere conte√∫do que seja aut√™ntico, envolvente e focado em resultados reais para Instagram.`
        },
        {
          role: "user",
          content: `${instagramContext}

SOLICITA√á√ÉO: ${message}

Crie o conte√∫do otimizado para Instagram conforme especificado acima. Identifique automaticamente o tipo de conte√∫do necess√°rio e gere conte√∫do profissional.`
        }
      ],
      temperature: 0.7,
      max_tokens: 2500
    })

    const response = completion.choices[0].message.content

    return NextResponse.json({
      success: true,
      response: response || 'Desculpe, n√£o consegui gerar o conte√∫do. Tente novamente.',
      metadata: {
        agencyName: agency?.name,
        totalClients: clients.length,
        totalProjects: projects.length,
        instagramFeatures: [
          'Gerador de Legendas',
          'Gerador de Ideias de Post',
          'Carrossel Textual',
          'Planejamento Editorial',
          'Gerador de Hashtags',
          'Benchmarking de Conte√∫do',
          'Respostas e Coment√°rios'
        ]
      }
    })

  } catch (error) {
    console.error('‚ùå Erro no Assistente Instagram:', error)
    
    return NextResponse.json({
      success: false,
      error: 'Erro interno do assistente. Tente novamente.'
    }, { status: 500 })
  }
}
