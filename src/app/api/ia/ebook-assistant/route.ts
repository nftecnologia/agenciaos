import { NextRequest, NextResponse } from 'next/server'
import { auth } from '@/lib/auth'
import { openai } from '@/lib/openai'

export async function POST(request: NextRequest) {
  try {
    const session = await auth()
    if (!session?.user?.email) {
      return NextResponse.json({ error: 'N√£o autorizado' }, { status: 401 })
    }

    const { message } = await request.json()

    if (!message?.trim()) {
      return NextResponse.json({ error: 'Mensagem √© obrigat√≥ria' }, { status: 400 })
    }

    console.log('üìö Assistente de Ebooks: Processando solicita√ß√£o...')

    // Detectar se o usu√°rio quer gerar descri√ß√£o ou ebook completo
    const isEbookGeneration = message.toLowerCase().includes('gerar ebook') || 
                             message.toLowerCase().includes('criar ebook') ||
                             message.toLowerCase().includes('escrever ebook')

    if (isEbookGeneration) {
      // Gerar ebook completo
      const completion = await openai.chat.completions.create({
        model: "gpt-4o-mini",
        messages: [
          {
            role: "system",
            content: `Voc√™ √© um Assistente Especializado em Cria√ß√£o de Ebooks EXTENSOS e DETALHADOS de alta qualidade comercial.

OBJETIVO: Criar ebooks de 20-50 p√°ginas com conte√∫do denso e valioso.

SUAS FUN√á√ïES:
- Criar ebooks completos, extensos e profundamente detalhados
- Desenvolver conte√∫do educativo com exemplos pr√°ticos abundantes
- Incluir estudos de caso, exerc√≠cios e ferramentas
- Aplicar t√©cnicas avan√ßadas de copywriting para ebooks
- Garantir m√°ximo valor educacional e comercial

REGRAS OBRIGAT√ìRIAS PARA EBOOKS EXTENSOS:

1. ESTRUTURA COMPLETA (20-50 p√°ginas):
   - Capa profissional (t√≠tulo + subt√≠tulo + descri√ß√£o)
   - √çndice detalhado com subcap√≠tulos
   - Introdu√ß√£o envolvente (2-3 p√°ginas)
   - 8-12 cap√≠tulos desenvolvidos (3-5 p√°ginas cada)
   - Cada cap√≠tulo com subcap√≠tulos (A, B, C)
   - Conclus√£o robusta (1-2 p√°ginas)
   - Recursos adicionais e ferramentas
   - Sobre o autor (template profissional)

2. CONTE√öDO DEVE SER EXTENSO COM:
   - Explica√ß√µes detalhadas e aprofundadas
   - M√∫ltiplos exemplos pr√°ticos por cap√≠tulo
   - Estudos de caso reais
   - Passo-a-passo detalhados
   - Exerc√≠cios pr√°ticos
   - Checklists e templates
   - Ferramentas e recursos recomendados
   - Dicas avan√ßadas e insights profissionais
   - Casos de sucesso e fracasso
   - Estat√≠sticas e dados relevantes

3. CADA CAP√çTULO DEVE TER:
   - Introdu√ß√£o ao tema (1 par√°grafo)
   - 3-4 subcap√≠tulos desenvolvidos
   - 2-3 exemplos pr√°ticos espec√≠ficos
   - 1 estudo de caso ou hist√≥ria
   - Lista de a√ß√µes pr√°ticas
   - Checklist ou template
   - Conclus√£o do cap√≠tulo

4. FORMATO COMERCIAL PREMIUM:
   - T√≠tulo magn√©tico e profissional
   - Promessa clara de transforma√ß√£o
   - Conte√∫do que resolve problemas complexos
   - CTAs estrat√©gicos ao longo do ebook
   - Linguagem persuasiva mas educativa

IMPORTANTE: O ebook deve ser EXTENSO, DETALHADO e COMPLETO. N√£o poupe conte√∫do!

Use markdown para formata√ß√£o e seja extremamente espec√≠fico com exemplos pr√°ticos.`
          },
          {
            role: "user",
            content: `${message}

Por favor, crie um EBOOK EXTENSO E DETALHADO (20-50 p√°ginas) baseado neste assunto. 

INCLUA OBRIGATORIAMENTE:

1. CAPA PROFISSIONAL (t√≠tulo magn√©tico, subt√≠tulo, descri√ß√£o comercial)
2. √çNDICE DETALHADO (8-12 cap√≠tulos com subcap√≠tulos)
3. INTRODU√á√ÉO ENVOLVENTE (2-3 p√°ginas com gancho, problema, promessa)
4. 8-12 CAP√çTULOS DESENVOLVIDOS (3-5 p√°ginas cada) com:
   - Subcap√≠tulos (A, B, C)
   - M√∫ltiplos exemplos pr√°ticos
   - Estudos de caso
   - Exerc√≠cios e checklists
   - Ferramentas recomendadas
5. CONCLUS√ÉO ROBUSTA (resumo, transforma√ß√£o, call-to-action)
6. RECURSOS ADICIONAIS (ferramentas, links, templates)
7. SOBRE O AUTOR (template profissional)

FA√áA UM EBOOK EXTENSO, DETALHADO E DE ALT√çSSIMA QUALIDADE COMERCIAL!`
          }
        ],
        temperature: 0.8,
        max_tokens: 16000
      })

      const response = completion.choices[0].message.content

      return NextResponse.json({
        success: true,
        response: response || 'N√£o foi poss√≠vel gerar o ebook. Tente novamente.',
        type: 'ebook-complete'
      })

    } else {
      // Gerar descri√ß√£o e estrutura do ebook
      const completion = await openai.chat.completions.create({
        model: "gpt-4o-mini",
        messages: [
          {
            role: "system",
            content: `Voc√™ √© um Assistente Especializado em Planejamento de Ebooks.

SUAS FUN√á√ïES:
- Analisar temas e criar conceitos de ebooks
- Gerar descri√ß√µes comerciais atrativas
- Estruturar √≠ndices detalhados
- Identificar p√∫blico-alvo
- Sugerir estrat√©gias de conte√∫do

REGRAS OBRIGAT√ìRIAS:
1. SEMPRE fa√ßa perguntas espec√≠ficas sobre:
   - P√∫blico-alvo do ebook
   - N√≠vel de conhecimento (iniciante/intermedi√°rio/avan√ßado)
   - Objetivo principal (educar/vender/informar)
   - Formato preferido (pr√°tico/te√≥rico/misto)

2. GERE uma descri√ß√£o completa com:
   - T√≠tulo atrativo
   - Subt√≠tulo explicativo
   - Descri√ß√£o comercial (2-3 par√°grafos)
   - P√∫blico-alvo definido
   - Benef√≠cios espec√≠ficos
   - √çndice preliminar (5-8 cap√≠tulos)

3. SEJA ESPEC√çFICO e comercial, focando no valor que o ebook entregar√°.

NUNCA pule as perguntas - elas s√£o obrigat√≥rias para criar um ebook de qualidade.`
          },
          {
            role: "user",
            content: `Assunto do ebook: ${message}

Por favor, me ajude a planejar este ebook. Primeiro, preciso que voc√™ me fa√ßa algumas perguntas essenciais para criar o melhor conceito poss√≠vel.`
          }
        ],
        temperature: 0.7,
        max_tokens: 1500
      })

      const response = completion.choices[0].message.content

      return NextResponse.json({
        success: true,
        response: response || 'N√£o foi poss√≠vel processar sua solicita√ß√£o. Tente novamente.',
        type: 'ebook-planning'
      })
    }

  } catch (error) {
    console.error('‚ùå Erro no Assistente de Ebooks:', error)
    
    return NextResponse.json({
      success: false,
      error: 'Erro interno do assistente. Tente novamente.'
    }, { status: 500 })
  }
}
