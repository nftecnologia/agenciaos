import { NextRequest, NextResponse } from 'next/server'
import { auth } from '@/lib/auth'
import { openai } from '@/lib/openai'
import { db } from '@/lib/db'

export async function POST(request: NextRequest) {
  try {
    const session = await auth()
    if (!session?.user?.email || !session.user.agencyId) {
      return NextResponse.json({ error: 'N√£o autorizado' }, { status: 401 })
    }

    const { message } = await request.json()

    if (!message?.trim()) {
      return NextResponse.json({ error: 'Mensagem √© obrigat√≥ria' }, { status: 400 })
    }

    // Buscar dados da ag√™ncia para personalizar o conte√∫do
    const [agency, clients, projects] = await Promise.all([
      db.agency.findUnique({
        where: { id: session.user.agencyId },
        include: { owner: true }
      }),
      db.client.findMany({
        where: { agencyId: session.user.agencyId },
        orderBy: { createdAt: 'desc' },
        take: 5
      }),
      db.project.findMany({
        where: { agencyId: session.user.agencyId },
        include: { client: true },
        orderBy: { createdAt: 'desc' },
        take: 5
      })
    ])

    // Preparar contexto para gera√ß√£o de conte√∫do de blog
    const blogContext = `
CONTEXTO DA AG√äNCIA PARA CRIA√á√ÉO DE CONTE√öDO DE BLOG:

üè¢ DADOS DA AG√äNCIA:
- Nome: ${agency?.name || 'Ag√™ncia'}
- Propriet√°rio: ${agency?.owner?.name || 'N√£o informado'}
- Especializa√ß√£o: Marketing Digital e Cria√ß√£o de Conte√∫do

üë• CLIENTES ATIVOS:
${clients.map(client => 
  `- ${client.name} (${client.company || 'Pessoa F√≠sica'}) - Segmento: ${client.phone || 'N√£o informado'}`
).join('\n')}

üìã PROJETOS EM ANDAMENTO:
${projects.map(project => 
  `- ${project.name} (Cliente: ${project.client.name}) - Or√ßamento: R$ ${Number(project.budget || 0).toLocaleString('pt-BR')}`
).join('\n')}

üéØ ESPECIALIDADES EM BLOG CONTENT:
- Artigos de Marketing Digital
- Posts sobre Estrat√©gias de Neg√≥cios
- Conte√∫do sobre Empreendedorismo
- Tutoriais e Guias Pr√°ticos
- Cases de Sucesso e Estudos de Caso
- Tend√™ncias do Mercado Digital
- SEO e Content Marketing
- Redes Sociais e Engajamento
- E-commerce e Vendas Online
- Produtividade e Gest√£o

üìä ESTRUTURAS DE BLOG RECOMENDADAS:
- Introdu√ß√£o envolvente com hook
- Desenvolvimento com subt√≠tulos (H2, H3)
- Listas e bullets para facilitar leitura
- Exemplos pr√°ticos e casos reais
- Call-to-Action estrat√©gico
- Conclus√£o que engaja coment√°rios
- Meta description otimizada
- Palavras-chave naturalmente inseridas
`

    console.log('‚úçÔ∏è Assistente de Blog: Gerando conte√∫do completo...')

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: `Voc√™ √© um Assistente Especializado em Gera√ß√£o de Conte√∫do para Blog, focado em marketing digital e neg√≥cios.

INSTRU√á√ïES PRINCIPAIS:
- Quando o usu√°rio fornecer NICHO + T√çTULO, gere um artigo de blog COMPLETO e profissional
- Estruture o conte√∫do com introdu√ß√£o, desenvolvimento em t√≥picos, exemplos pr√°ticos e conclus√£o
- Use subt√≠tulos (##) para organizar o texto
- Inclua bullets e listas quando apropriado
- Mantenha tom profissional mas acess√≠vel
- Foque em entregar valor real ao leitor

ESTRUTURA PADR√ÉO DO ARTIGO:
1. **Introdu√ß√£o** - Hook + Promessa de valor (100-150 palavras)
2. **Desenvolvimento** - 3-5 t√≥picos principais com subt√≠tulos (800-1200 palavras)
3. **Exemplos Pr√°ticos** - Cases, dicas ou tutoriais (200-300 palavras)
4. **Conclus√£o** - Resumo + Call-to-Action (100-150 palavras)
5. **Meta Description** - 150-160 caracteres otimizada para SEO

TIPOS DE CONTE√öDO ESPECIALIZADOS:
- **Guias Completos**: Como fazer X em Y passos
- **Listicles**: X melhores formas/ferramentas/estrat√©gias
- **Cases de Sucesso**: Como empresa X conseguiu resultado Y
- **Comparativos**: X vs Y - Qual escolher?
- **Tend√™ncias**: O futuro do nicho X em 2024/2025
- **Tutoriais**: Passo a passo detalhado
- **An√°lises**: Analisando estrat√©gia/ferramenta/m√©todo

OTIMIZA√á√ÉO SEO:
- Palavra-chave principal no t√≠tulo e subt√≠tulos
- Densidade de palavra-chave entre 1-2%
- Subt√≠tulos organizados hierarquicamente
- Links internos quando apropriado
- CTA claro no final

IMPORTANTE: Se o usu√°rio n√£o especificar NICHO + T√çTULO claramente, fa√ßa perguntas para obter essas informa√ß√µes essenciais.`
        },
        {
          role: "user",
          content: `${blogContext}

SOLICITA√á√ÉO DO USU√ÅRIO: ${message}

Gere um conte√∫do de blog completo e profissional baseado na solicita√ß√£o. Se faltarem informa√ß√µes (nicho ou t√≠tulo), solicite essas informa√ß√µes espec√≠ficas.`
        }
      ],
      temperature: 0.7,
      max_tokens: 3000
    })

    const response = completion.choices[0].message.content

    return NextResponse.json({
      success: true,
      response: response || 'Desculpe, n√£o consegui gerar o conte√∫do. Tente novamente.',
      metadata: {
        agencyName: agency?.name,
        totalClients: clients.length,
        totalProjects: projects.length,
        contentTypes: [
          'Guias Completos',
          'Listicles',
          'Cases de Sucesso',
          'Tutoriais',
          'An√°lises de Mercado',
          'Tend√™ncias'
        ]
      }
    })

  } catch (error) {
    console.error('‚ùå Erro no Assistente de Blog:', error)
    
    return NextResponse.json({
      success: false,
      error: 'Erro interno do assistente. Tente novamente.'
    }, { status: 500 })
  }
}
