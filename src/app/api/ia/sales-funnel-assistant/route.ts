import { NextRequest, NextResponse } from 'next/server'
import { auth } from '@/lib/auth'
import { openai } from '@/lib/openai'
import { db } from '@/lib/db'

export async function POST(request: NextRequest) {
  try {
    const session = await auth()
    if (!session?.user?.email || !session.user.agencyId) {
      return NextResponse.json({ error: 'N√£o autorizado' }, { status: 401 })
    }

    const { message } = await request.json()

    if (!message?.trim()) {
      return NextResponse.json({ error: 'Mensagem √© obrigat√≥ria' }, { status: 400 })
    }

    // Buscar dados da ag√™ncia para personalizar o funil
    const [agency, clients, projects] = await Promise.all([
      db.agency.findUnique({
        where: { id: session.user.agencyId },
        include: { owner: true }
      }),
      db.client.findMany({
        where: { agencyId: session.user.agencyId },
        orderBy: { createdAt: 'desc' },
        take: 5
      }),
      db.project.findMany({
        where: { agencyId: session.user.agencyId },
        include: { client: true },
        orderBy: { createdAt: 'desc' },
        take: 5
      })
    ])

    // Preparar contexto para gera√ß√£o de funil de vendas
    const salesFunnelContext = `
CONTEXTO DA AG√äNCIA PARA GERA√á√ÉO DE FUNIL DE VENDAS:

üè¢ DADOS DA AG√äNCIA:
- Nome: ${agency?.name || 'Ag√™ncia'}
- Propriet√°rio: ${agency?.owner?.name || 'N√£o informado'}
- Especializa√ß√£o: Marketing Digital e Estrat√©gias de Vendas

üë• CLIENTES ATIVOS:
${clients.map(client => 
  `- ${client.name} (${client.company || 'Pessoa F√≠sica'})`
).join('\n')}

üìã PROJETOS EM ANDAMENTO:
${projects.map(project => 
  `- ${project.name} (Cliente: ${project.client.name})`
).join('\n')}

üéØ ESPECIALIDADES EM FUNIS DE VENDAS:
- Produtos Digitais (Cursos, E-books, Mentorias)
- Servi√ßos Profissionais (Consultorias, Assessorias)
- Produtos F√≠sicos (E-commerce, Drop Shipping)
- Software e Apps (SaaS, Ferramentas)
- Infoprodutos (Treinamentos, Masterclasses)
- Eventos e Experi√™ncias (Workshops, Palestras)

üí∞ ESTRAT√âGIAS DE MONETIZA√á√ÉO:
- Produto Principal (Core Product)
- Order Bumps (Ofertas Complementares)
- Upsells (Produtos Premium)
- Downsells (Alternativas Acess√≠veis)
- Cross-sells (Produtos Relacionados)
- Recorr√™ncia (Assinaturas, Memberships)

üìä FAIXAS DE PRE√áO T√çPICAS (MERCADO BRASILEIRO):
- Produtos de Entrada: R$ 27 - R$ 97
- Produtos Intermedi√°rios: R$ 197 - R$ 497
- Produtos Premium: R$ 997 - R$ 2.997
- Produtos Elite: R$ 5.000 - R$ 15.000+
- Order Bumps: 10-30% do produto principal
- Upsells: 3-5x o pre√ßo do produto principal
- Downsells: 30-50% do produto principal
`

    console.log('üí∞ Assistente de Funil: Gerando estrat√©gia completa de vendas...')

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: `Voc√™ √© um Assistente Especializado em Gera√ß√£o de Funis de Vendas completos e lucrativos.

FUN√á√ÉO PRINCIPAL:
- Quando o usu√°rio fornecer um NICHO, gere um funil de vendas completo e estrat√©gico
- Crie produtos coerentes e complementares dentro do nicho
- Calcule pre√ßos realistas baseados no mercado brasileiro
- Foque em maximizar o ticket m√©dio e lifetime value

ESTRUTURA DO FUNIL COMPLETO:
1. **PRODUTO PRINCIPAL** (Core Product)
2. **ORDER BUMP** (Oferta Complementar)
3. **UPSELL** (Produto Premium)
4. **DOWNSELL** (Alternativa Acess√≠vel)

FORMATO PARA CADA PRODUTO:
üéØ **[TIPO DO PRODUTO]**
- **Nome:** [Nome atrativo e espec√≠fico]
- **Descri√ß√£o:** [Explica√ß√£o clara do que √© o produto]
- **Oferta:** [Proposta de valor √∫nica - o que o cliente recebe]
- **Dores que Resolve:** [3-5 problemas espec√≠ficos que soluciona]
- **P√∫blico-alvo:** [Avatar espec√≠fico dentro do nicho]
- **Valor Sugerido:** R$ [pre√ßo] ([justificativa do pre√ßo])
- **Convers√£o Esperada:** [% estimada de convers√£o]

CRIT√âRIOS DE QUALIDADE:
- Produtos complementares (n√£o concorrentes entre si)
- Pre√ßos escalonados logicamente
- Ofertas irresist√≠veis com urg√™ncia/escassez
- Dores espec√≠ficas e bem definidas
- ROI claro para o cliente
- Estrat√©gia de backend lucrativa

EXEMPLO DE ESTRUTURA DE PRE√áOS:
- Produto Principal: R$ 197
- Order Bump: R$ 47 (24% do principal)
- Upsell: R$ 697 (3.5x do principal)
- Downsell: R$ 97 (50% do principal)

AN√ÅLISE FINANCEIRA:
- Ticket M√©dio Projetado
- LTV (Lifetime Value) estimado
- Margem de Lucro por produto
- ROI para investimento em tr√°fego

ESTRAT√âGIAS DE CONVERS√ÉO:
- Gatilhos mentais utilizados
- Urg√™ncia e escassez
- Prova social e autoridade
- Garantias e seguran√ßa

IMPORTANTE: Baseie tudo em dados realistas do mercado brasileiro e nichos lucrativos comprovados.`
        },
        {
          role: "user",
          content: `${salesFunnelContext}

NICHO FORNECIDO: ${message}

Crie um funil de vendas completo e lucrativo para este nicho. Inclua an√°lise financeira detalhada e estrat√©gias de convers√£o para maximizar resultados.`
        }
      ],
      temperature: 0.7,
      max_tokens: 3000
    })

    const response = completion.choices[0].message.content

    return NextResponse.json({
      success: true,
      response: response || 'Desculpe, n√£o consegui gerar o funil. Tente novamente.',
      metadata: {
        agencyName: agency?.name,
        totalClients: clients.length,
        totalProjects: projects.length,
        funnelTypes: [
          'Produtos Digitais',
          'Servi√ßos Profissionais',
          'E-commerce',
          'SaaS/Software',
          'Infoprodutos',
          'Eventos'
        ]
      }
    })

  } catch (error) {
    console.error('‚ùå Erro no Assistente de Funil:', error)
    
    return NextResponse.json({
      success: false,
      error: 'Erro interno do assistente. Tente novamente.'
    }, { status: 500 })
  }
}
