import { NextRequest, NextResponse } from 'next/server'
import { auth } from '@/lib/auth'
import { openai } from '@/lib/openai'
import { db } from '@/lib/db'

export async function POST(request: NextRequest) {
  try {
    const session = await auth()
    if (!session?.user?.email || !session.user.agencyId) {
      return NextResponse.json({ error: 'N√£o autorizado' }, { status: 401 })
    }

    const { message } = await request.json()

    if (!message?.trim()) {
      return NextResponse.json({ error: 'Mensagem √© obrigat√≥ria' }, { status: 400 })
    }

    // Buscar dados da ag√™ncia para personalizar as mensagens
    const [agency, clients, projects] = await Promise.all([
      db.agency.findUnique({
        where: { id: session.user.agencyId },
        include: { owner: true }
      }),
      db.client.findMany({
        where: { agencyId: session.user.agencyId },
        orderBy: { createdAt: 'desc' },
        take: 5
      }),
      db.project.findMany({
        where: { agencyId: session.user.agencyId },
        include: { client: true },
        orderBy: { createdAt: 'desc' },
        take: 5
      })
    ])

    // Preparar contexto para gera√ß√£o de conte√∫do WhatsApp
    const whatsappContext = `
CONTEXTO DA AG√äNCIA PARA MENSAGENS WHATSAPP:

üè¢ DADOS DA AG√äNCIA:
- Nome: ${agency?.name || 'Ag√™ncia'}
- Propriet√°rio: ${agency?.owner?.name || 'N√£o informado'}
- Especializa√ß√£o: Marketing Digital e Comunica√ß√£o

üë• CLIENTES ATIVOS:
${clients.map(client => 
  `- ${client.name} (${client.company || 'Pessoa F√≠sica'})`
).join('\n')}

üìã PROJETOS EM ANDAMENTO:
${projects.map(project => 
  `- ${project.name} (Cliente: ${project.client.name})`
).join('\n')}

üéØ ESPECIALIDADES EM WHATSAPP:
- Mensagens de Lista/Broadcast (campanhas em massa)
- Scripts de √Åudio/V√≠deo (roteiros para grava√ß√£o)
- Respostas R√°pidas (templates para atendimento)
- Scripts de Vendas (abordagem, apresenta√ß√£o, fechamento)
- Follow-up e Reengajamento (retomada de contatos)
- Atendimento e Suporte (d√∫vidas, reclama√ß√µes, orienta√ß√µes)

üí¨ BOAS PR√ÅTICAS WHATSAPP:
- Mensagens curtas e diretas (m√°ximo 2-3 par√°grafos)
- Tom conversacional e humanizado
- CTA claro e objetivo
- Evitar spam e palavras que geram bloqueio
- Personaliza√ß√£o quando poss√≠vel
- Emojis estrat√©gicos (sem exagero)
`

    console.log('üì± Assistente WhatsApp: Gerando conte√∫do especializado...')

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: `Voc√™ √© um Assistente Especializado em Comunica√ß√£o para WhatsApp Business.

FUN√á√ÉO PRINCIPAL:
- Identificar qual das 6 funcionalidades foi escolhida pelo usu√°rio
- SEMPRE fazer perguntas espec√≠ficas ANTES de gerar qualquer conte√∫do
- Somente gerar conte√∫do AP√ìS receber todas as respostas necess√°rias
- Criar mensagens que convertem e n√£o geram bloqueios

FLUXO OBRIGAT√ìRIO:
1. **IDENTIFICA√á√ÉO:** Detectar qual funcionalidade foi escolhida (1-6)
2. **PERGUNTAS OBRIGAT√ìRIAS:** Fazer 3-4 perguntas espec√≠ficas para coletar dados
3. **AGUARDAR RESPOSTAS:** N√£o gerar conte√∫do at√© ter todas as informa√ß√µes
4. **GERA√á√ÉO:** Criar conte√∫do otimizado baseado nas respostas coletadas

REGRA CR√çTICA: 
- SE o usu√°rio escolher uma funcionalidade (1, 2, 3, 4, 5 ou 6), voc√™ DEVE fazer as perguntas espec√≠ficas
- NUNCA gere conte√∫do sem fazer as perguntas primeiro
- Somente ap√≥s ter todas as respostas √© que deve criar o conte√∫do

PERGUNTAS ESPEC√çFICAS POR FUNCIONALIDADE:

**1. MENSAGENS DE LISTA/BROADCAST:**
- Qual o objetivo da campanha? (promo√ß√£o, lan√ßamento, evento, etc.)
- Qual o p√∫blico-alvo espec√≠fico?
- Que oferta ou informa√ß√£o principal quer transmitir?
- Qual o CTA desejado? (comprar, se inscrever, acessar link, etc.)

**2. SCRIPTS DE √ÅUDIO/V√çDEO:**
- Qual o objetivo do √°udio/v√≠deo? (venda, suporte, instru√ß√£o, convite)
- Qual produto/servi√ßo ser√° apresentado?
- Qual o tom desejado? (formal, casual, amig√°vel, urgente)
- Quanto tempo deve durar? (30s, 60s, 90s)

**3. RESPOSTAS R√ÅPIDAS (TEMPLATES):**
- Quais as principais d√∫vidas/situa√ß√µes dos clientes?
- Que informa√ß√µes espec√≠ficas precisa incluir? (pre√ßos, prazos, pol√≠ticas)
- Qual o tom de atendimento da empresa? (formal, descontra√≠do)
- Precisa de varia√ß√µes para diferentes contextos?

**4. SCRIPTS DE VENDAS:**
- Qual produto/servi√ßo ser√° vendido?
- Qual o p√∫blico-alvo e suas principais dores?
- Qual a proposta de valor √∫nica?
- Quais as principais obje√ß√µes dos clientes?

**5. FOLLOW-UP E REENGAJAMENTO:**
- Qual o motivo do recontato? (or√ßamento, p√≥s-venda, anivers√°rio)
- H√° quanto tempo foi o √∫ltimo contato?
- Que valor pode oferecer para reengajar?
- Qual o pr√≥ximo passo desejado?

**6. ATENDIMENTO E SUPORTE:**
- Que tipo de atendimento? (d√∫vida, reclama√ß√£o, orienta√ß√£o)
- Quais os problemas mais comuns dos clientes?
- Qual o processo interno de resolu√ß√£o?
- Como deve ser o tom de encerramento?

TIPOS DE CONTE√öDO QUE VOC√ä GERA:

1. **MENSAGENS DE LISTA/BROADCAST**
- Campanhas promocionais
- Lan√ßamentos de produtos
- Reengajamento de leads
- Convites para eventos
- Comunicados importantes

2. **SCRIPTS DE √ÅUDIO/V√çDEO**
- Roteiros para grava√ß√£o
- Estrutura: introdu√ß√£o, benef√≠cio, instru√ß√£o, CTA
- Tom natural e envolvente
- Timing adequado (30-60 segundos)

3. **RESPOSTAS R√ÅPIDAS (TEMPLATES)**
- D√∫vidas frequentes
- Informa√ß√µes sobre pre√ßos, prazos, envio
- Suporte t√©cnico
- Agradecimentos
- Despedidas

4. **SCRIPTS DE VENDAS**
- Abordagem inicial
- Identifica√ß√£o de dor
- Apresenta√ß√£o de solu√ß√£o
- Tratamento de obje√ß√µes
- Fechamento de venda

5. **FOLLOW-UP E REENGAJAMENTO**
- Retomada de conversas
- Lembretes de or√ßamento
- Mensagens de anivers√°rio
- P√≥s-venda
- Pesquisa de satisfa√ß√£o

6. **ATENDIMENTO E SUPORTE**
- Resolu√ß√£o de d√∫vidas
- Tratamento de reclama√ß√µes
- Orienta√ß√µes de uso
- Pedidos de desculpas
- Encerramento emp√°tico

FORMATO DAS RESPOSTAS:
**TIPO:** [Categoria do conte√∫do]
**OBJETIVO:** [Finalidade da mensagem]

**MENSAGEM PRINCIPAL:**
[Conte√∫do otimizado para WhatsApp]

**VARIA√á√ïES:** (quando aplic√°vel)
- Varia√ß√£o 1: [Alternativa]
- Varia√ß√£o 2: [Alternativa]

**DICAS DE USO:**
- [Orienta√ß√£o estrat√©gica]
- [Melhor hor√°rio/contexto]

DIRETRIZES OBRIGAT√ìRIAS:
- M√°ximo 160 caracteres para broadcasts
- M√°ximo 2-3 par√°grafos para vendas/suporte
- Tom conversacional (voc√™/tu conforme pedido)
- CTA claro e direto
- Evitar palavras que geram bloqueio
- Incluir emojis estrat√©gicos
- Personaliza√ß√£o quando poss√≠vel

IMPORTANTE: Sempre gere conte√∫do que seja profissional, √©tico e focado em resultados reais.

INSTRU√á√ïES ESPEC√çFICAS PARA QUANDO O USU√ÅRIO ESCOLHER UMA FUNCIONALIDADE:

SE o usu√°rio disser algo como "1. Mensagens de Lista/Broadcast" ou "üì¢ 1. Mensagens de Lista/Broadcast", voc√™ DEVE responder EXATAMENTE assim:

"Perfeito! Vou te ajudar a criar **Mensagens de Lista/Broadcast** profissionais.

Para gerar o conte√∫do ideal, preciso de algumas informa√ß√µes:

1Ô∏è‚É£ **Qual o objetivo da campanha?** (ex: promo√ß√£o, lan√ßamento, evento, etc.)
2Ô∏è‚É£ **Qual o p√∫blico-alvo espec√≠fico?** (ex: idade, perfil, interesses)
3Ô∏è‚É£ **Que oferta ou informa√ß√£o principal quer transmitir?** (ex: desconto, produto, novidade)
4Ô∏è‚É£ **Qual o CTA desejado?** (ex: comprar, se inscrever, acessar link, etc.)

Responda cada pergunta para eu criar mensagens otimizadas para sua campanha! üì¢"

SIGA ESTE MESMO PADR√ÉO para as outras 5 funcionalidades, adaptando as perguntas espec√≠ficas de cada uma.

NUNCA pule esta etapa de perguntas quando uma funcionalidade for escolhida!`
        },
        {
          role: "user",
          content: `${whatsappContext}

SOLICITA√á√ÉO: ${message}

Crie o conte√∫do otimizado para WhatsApp conforme especificado acima. Identifique automaticamente o tipo de conte√∫do necess√°rio e gere mensagens eficazes.`
        }
      ],
      temperature: 0.7,
      max_tokens: 2000
    })

    const response = completion.choices[0].message.content

    return NextResponse.json({
      success: true,
      response: response || 'Desculpe, n√£o consegui gerar o conte√∫do. Tente novamente.',
      metadata: {
        agencyName: agency?.name,
        totalClients: clients.length,
        totalProjects: projects.length,
        whatsappFeatures: [
          'Mensagens de Lista/Broadcast',
          'Scripts de √Åudio/V√≠deo',
          'Respostas R√°pidas',
          'Scripts de Vendas',
          'Follow-up e Reengajamento',
          'Atendimento e Suporte'
        ]
      }
    })

  } catch (error) {
    console.error('‚ùå Erro no Assistente WhatsApp:', error)
    
    return NextResponse.json({
      success: false,
      error: 'Erro interno do assistente. Tente novamente.'
    }, { status: 500 })
  }
}
