import { NextRequest, NextResponse } from 'next/server'
import { auth } from '@/lib/auth'
import { openai } from '@/lib/openai'
import { db } from '@/lib/db'

// Fun√ß√£o para detectar se a solicita√ß√£o √© gen√©rica e precisa de qualifica√ß√£o
function isGenericCopyRequest(message: string): boolean {
  const genericKeywords = [
    'crie uma headline',
    'fa√ßa um copy',
    'escreva um texto',
    'preciso de uma copy',
    'crie um an√∫ncio',
    'fa√ßa um post',
    'escreva um email',
    'crie um cta',
    'headline magn√©tica',
    'copy persuasivo',
    'texto para',
    'an√∫ncio para'
  ]
  
  const specificKeywords = [
    'produto:',
    'servi√ßo:',
    'p√∫blico:',
    'cliente:',
    'idade:',
    'problema:',
    'benef√≠cio:',
    'pre√ßo:',
    'vende',
    'para pessoas que',
    'meu cliente',
    'nosso produto',
    'oferecemos'
  ]
  
  const messageLower = message.toLowerCase()
  
  // Se tem palavras gen√©ricas mas n√£o tem espec√≠ficas, precisa qualifica√ß√£o
  const hasGeneric = genericKeywords.some(keyword => messageLower.includes(keyword))
  const hasSpecific = specificKeywords.some(keyword => messageLower.includes(keyword))
  
  // Tamb√©m verifica se a mensagem √© muito curta (menos de 50 caracteres)
  const isTooShort = message.length < 50
  
  return (hasGeneric && !hasSpecific) || isTooShort
}

export async function POST(request: NextRequest) {
  try {
    const session = await auth()
    if (!session?.user?.email || !session.user.agencyId) {
      return NextResponse.json({ error: 'N√£o autorizado' }, { status: 401 })
    }

    const { message } = await request.json()

    if (!message?.trim()) {
      return NextResponse.json({ error: 'Mensagem √© obrigat√≥ria' }, { status: 400 })
    }

    // Buscar dados da ag√™ncia e clientes para personalizar copies
    const [agency, clients, projects] = await Promise.all([
      db.agency.findUnique({
        where: { id: session.user.agencyId },
        include: { owner: true }
      }),
      db.client.findMany({
        where: { agencyId: session.user.agencyId },
        orderBy: { createdAt: 'desc' },
        take: 10
      }),
      db.project.findMany({
        where: { agencyId: session.user.agencyId },
        include: { client: true },
        orderBy: { createdAt: 'desc' },
        take: 10
      })
    ])

    // Preparar contexto de copywriting para a IA
    const copyContext = `
CONTEXTO DA AG√äNCIA PARA COPYWRITING:

üè¢ DADOS DA AG√äNCIA:
- Nome: ${agency?.name || 'Ag√™ncia'}
- Propriet√°rio: ${agency?.owner?.name || 'N√£o informado'}
- Especializa√ß√£o: Marketing Digital e Comunica√ß√£o

üë• CLIENTES ATIVOS:
${clients.map(client => 
  `- ${client.name} (${client.company || 'Pessoa F√≠sica'}) - Segmento: ${client.phone || 'N√£o informado'}`
).join('\n')}

üìã PROJETOS EM ANDAMENTO:
${projects.map(project => 
  `- ${project.name} (Cliente: ${project.client.name}) - Or√ßamento: R$ ${Number(project.budget || 0).toLocaleString('pt-BR')}`
).join('\n')}

üéØ TIPOS DE COPY MAIS SOLICITADOS:
- Headlines para an√∫ncios Facebook/Instagram
- Copy para Google Ads (t√≠tulo + descri√ß√£o)
- Textos para landing pages
- CTAs (calls to action) persuasivos
- Emails de marketing e nutri√ß√£o
- Posts para redes sociais
- Scripts para v√≠deos de vendas
- Textos para stories e reels
- Copy para funis de vendas
- Headlines para blog posts

üìä SEGMENTOS DOS CLIENTES:
- E-commerce e Loja Virtual
- Consultoria e Servi√ßos Profissionais
- Sa√∫de e Bem-estar
- Educa√ß√£o e Cursos Online
- Tecnologia e Software
- Moda e Lifestyle
- Alimenta√ß√£o e Restaurantes
- Imobili√°rio e Constru√ß√£o

üß† ESTRAT√âGIAS DE COPYWRITING:
- M√©todo AIDA (Aten√ß√£o, Interesse, Desejo, A√ß√£o)
- Storytelling e narrativas envolventes
- Gatilhos mentais (escassez, autoridade, prova social)
- Copy emocional vs. racional
- Headlines magn√©ticas
- Objections handling
- Urg√™ncia e escassez
- Benef√≠cios vs. caracter√≠sticas
`

    console.log('‚úçÔ∏è Assistente de Copy: Analisando solicita√ß√£o...')

    // Detectar se √© uma solicita√ß√£o gen√©rica que precisa de qualifica√ß√£o
    const needsQualification = isGenericCopyRequest(message)

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: `Voc√™ √© um Assistente de Copy especializado em copywriting e textos persuasivos para marketing digital.

COMPORTAMENTO INTELIGENTE:
- Se a solicita√ß√£o for gen√©rica (sem detalhes sobre produto, p√∫blico, objetivo), fa√ßa perguntas de qualifica√ß√£o ANTES de criar a copy
- Se j√° tiver informa√ß√µes suficientes, crie a copy diretamente
- Sempre personalize baseado nas respostas do cliente

PERGUNTAS DE QUALIFICA√á√ÉO (fa√ßa 3-5 mais relevantes):
1. **Produto/Servi√ßo**: O que exatamente voc√™ est√° vendendo/promovendo?
2. **P√∫blico-alvo**: Quem √© seu cliente ideal? (idade, g√™nero, interesses, problemas)
3. **Objetivo**: Qual a√ß√£o voc√™ quer que as pessoas fa√ßam? (comprar, se inscrever, baixar, agendar)
4. **Plataforma**: Onde ser√° usado? (Facebook Ads, Instagram, Google Ads, email, site)
5. **Dores/Desejos**: Que problema seu produto resolve? Que desejo realiza?
6. **Diferenciais**: O que torna seu produto √∫nico da concorr√™ncia?
7. **Tom de voz**: Como quer falar com seu p√∫blico? (formal, casual, divertido, autorit√°rio)
8. **Or√ßamento/Prazo**: H√° urg√™ncia ou escassez real para mencionar?

T√âCNICAS DE COPY:
- AIDA (Aten√ß√£o, Interesse, Desejo, A√ß√£o)
- Gatilhos: escassez, urg√™ncia, autoridade, prova social
- Benef√≠cios em vez de caracter√≠sticas
- Headlines curiosas que geram cliques
- CTAs espec√≠ficos e persuasivos
- Copy emocional que conecta com dores e desejos
- Storytelling quando apropriado
- N√∫meros e dados para credibilidade

IMPORTANTE: Uma copy eficaz come√ßa com perguntas certas. Quanto mais voc√™ souber sobre produto, p√∫blico e objetivo, melhor ser√° o resultado.`
        },
        {
          role: "user",
          content: `${copyContext}

SOLICITA√á√ÉO: ${message}

${needsQualification ? 
  'Esta solicita√ß√£o parece gen√©rica. Fa√ßa as perguntas de qualifica√ß√£o mais importantes para criar uma copy eficaz.' : 
  'Crie uma copy persuasiva baseada nas informa√ß√µes fornecidas.'
}`
        }
      ],
      temperature: 0.7,
      max_tokens: 2000
    })

    const response = completion.choices[0].message.content

    return NextResponse.json({
      success: true,
      response: response || 'Desculpe, n√£o consegui gerar o copy. Tente novamente.',
      metadata: {
        agencyName: agency?.name,
        totalClients: clients.length,
        totalProjects: projects.length,
        copyTypes: [
          'Headlines Magn√©ticas',
          'Copy para An√∫ncios',
          'Landing Pages', 
          'CTAs Persuasivos',
          'Email Marketing',
          'Posts Redes Sociais'
        ]
      }
    })

  } catch (error) {
    console.error('‚ùå Erro no Assistente de Copy:', error)
    
    return NextResponse.json({
      success: false,
      error: 'Erro interno do assistente. Tente novamente.'
    }, { status: 500 })
  }
}
